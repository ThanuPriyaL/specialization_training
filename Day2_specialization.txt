public interface Bank {​​​​​

    void withDraw(int amount);

    void deposit(int amount);

    void showBalance(); }​​​​​

--------------------------------------------------------------------------------------
 public class SBIBank implements Bank {​​​​​

    private int balance;

    SBIBank(int amount){​​​​​

        this.balance = amount;

    }​​​​​     @Override

    public void withDraw(int amount) {​​​​​

        if(amount < balance)

            balance = balance - amount;

            else System.out.println("From SBIBank......InSufficient Funds");

    }​​​​​     @Override

    public void deposit(int amount) {​​​​​

        if(amount < 50000)

        balance = balance + amount;

        else System.out.println("From SBIBank...... Not possible to depost");

    }​​​​​     @Override

    public void showBalance() {​​​​​

        System.out.println("From SBIBank...... Availiable Balance ...."+balance);

    }​​​​​

    public void licPolicy() {​​​​​

        System.out.println("From SBIBank......licPolicy");

    }​​​​​ }​​​​​
----------------------------------------------------------------------------------------------------------------------
 public class AXISBank implements Bank {​​​​​

    private int balance;

    AXISBank(int amount){​​​​​

        this.balance = amount;

    }​​​​​     @Override

    public void withDraw(int amount) {​​​​​

        if(amount < balance)

            balance = balance - amount;

            else System.out.println("From AXISBank......InSufficient Funds");

    }​​​​​     @Override

    public void deposit(int amount) {​​​​​

        if(amount < 200000)

        balance = balance + amount;

        else System.out.println("From AXISBank...... Not possible to depost");

    }​​​​​     @Override

    public void showBalance() {​​​​​

        System.out.println("From AXISBank...... Availiable Balance ...."+balance);

    }​​​​​ 
}
----------------------------------------------------------------------------------------------------------------------------------------------------------​​​​​
write a program to find sum of the smallest and highest prime number in a given range?
    public static void main(String args[])
    {
        int a,b,flag,i;
        Scanner ip = new Scanner(System.in);
        System.out.print("Enter start value : ");
        a = ip.nextInt();
        System.out.print("Enter end value :");
        b = ip.nextInt();
        System.out.print("Prime numbers between "+ a + " and "+ b + "are : ");
        while (a < b)
        {
            flag = 0;
            for(i = 2; i <= a/2; ++i)
            {
                if(a % i == 0)
                {
                    flag = 1;
                    break;
                }
            }
            if (flag == 0)
                System.out.print(a + "");
            ++a;
        }
    }
}
//another method
import java.util.Scanner;
 
public class Demo {
 
    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        int n1 = scanner.nextInt();
        int n2 = scanner.nextInt();

        boolean isFirst = false;
        int firstPrimeNo=0;
        int lastPrimeNo=0;
        for(int i=n1;i<=n2;i++) {

            if( isPrime(i) == true) {

                if(isFirst == false) {
                    firstPrimeNo = i;
                    isFirst = true;
                }

                lastPrimeNo = i;

            }// if
    }// for

        System.out.println("Smalest prime No..."+firstPrimeNo+"....Biggest prime No..."+lastPrimeNo);

    }
 
    
    static boolean isPrime(int n){

        boolean res = false;
        int i;
        for(i=2;(i<=n/2) && (n % i != 0);i++);

        if(i>n/2) {
            res = true;
        }
        return res;
    }

}
//reverse way
import java.util.Scanner;
 
public class Demo {
 
    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        int n1 = scanner.nextInt();
        int n2 = scanner.nextInt();

        boolean isFirst = false;
        int biggestPrime=0;
        int smallestPrime=0;
        for(int i=n2;i>=n1;i--) {// 200...100

            if( isPrime(i) == true) {

                if(isFirst == false) {
                    biggestPrime = i;
                    isFirst = true;
                }

                smallestPrime = i;

            }// if
    }// for

        // 100.. 200

        // 200..100

        System.out.println("Smalest prime No..."+smallestPrime+"....Biggest prime No..."+biggestPrime);

    }
 
    
    static boolean isPrime(int n){

        boolean res = false;
        int i;
        for(i=2;(i<=n/2) && (n % i != 0);i++);

        if(i>n/2) {
            res = true;
        }
        return res;
    }

}
----------------------------------------------------------------------------------------------------------------------------------------------------
Program to Round a Number to n Decimal
import java.util.Scanner;

public class Decimal {

    public static void main(String[] args) {
        double a;
        Scanner ip = new Scanner(System.in);
        System.out.print("Enter start value : ");
        a = ip.nextInt();
        System.out.format("%.3f", a);
    }
}
//another method
public class RoundedNo {
 
    public static void main(String[] args) {

        float n =  1.34678f;

        int temp  = (int)(n * 1000);// 1346
        int r = temp % 10;/// 1346 % 10...
        if(r >=5)
        {
            temp = (temp / 10) + 1;//1346/10 === 134 +1
        }
        n = temp / 100.0f;// === 135 / 100.0 ===== 1.35

        System.out.println("Result...."+n);
        // 1.35
 
    }
 
}
----------------------------------------------------------------------------------------------------------------------------------------------------
Write a program to display a number whose digits are 3 greater than the corresponding digits of the number TAKEN.

import java.util.Scanner; public class GreaterTakenNo {​​​​​     public static void main(String[] args) {​​​​​

        // 5696..... 

        // 8929... 1000 * 8 + 9 * 100 + 2* 10 + 9 * 1

        // 5696...

        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();

        int p = 1;

        int res =0;

        for(int r=0; n != 0 ;) {​​​​​

            r = n % 10;// 5696 % 10....6

            n = n /10; // 569... 56 5 0

            r = r+3;

            r = r % 10;// 10 % 10 ===0

            //if(r >= 10) {​​​​​

                //r = r - 10;// 9+3=12-10=2

                //r = r % 10;// 12 % 10===2

        //    }​​​​​

            res = res + r * p;

            p = p* 10;

        }​​​​​

        System.out.println("result...."+res);/// 

        // 5678

        //8901

    }​​​​​ }​​​​​


----------------------------------------------------------------------------------------------------------------------------------------------------
Program to  find common elements in three arrays which are sorted?

public class Array {
void findCommon(int ar1[], int ar2[], int ar3[])
{

int i = 0, j = 0, k = 0;

while (i < ar1.length && j < ar2.length && k < ar3.length)
{

if (ar1[i] == ar2[j] && ar2[j] == ar3[k])
{
 System.out.print(ar1[i]+" "); i++; j++; k++; }
// x < y
else if (ar1[i] < ar2[j])
i++;
// y < z
else if (ar2[j] < ar3[k])
j++;
// We reach here when x > y and z < y, i.e., z is smallest
else
k++;
}
}

public static void main(String args[])
{
FindCommon ob = new FindCommon();

int ar1[] = {1, 5, 10, 20, 40, 80};
int ar2[] = {6, 7, 20, 80, 100};
int ar3[] = {3, 4, 15, 20, 30, 70, 80, 120};System.out.print("Common elements are ");
ob.findCommon(ar1, ar2, ar3);
}
}