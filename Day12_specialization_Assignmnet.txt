Day12 MySQL excercise 
1. Write a SQL statement to create a simple table countries including columns country_id,country_name and region_id.
->CREATE TABLE countries( 
COUNTRY_ID varchar(2),
COUNTRY_NAME varchar(40),
REGION_ID varchar(10)
);
-----------------------------------------------------------------------------------------------------------------------
2.Write a SQL statement to create a simple table countries including columns country_id,country_name and region_id which is already exists.
->CREATE TABLE IF NOT EXISTS countries ( 
COUNTRY_ID varchar(2),
COUNTRY_NAME varchar(40),
REGION_ID varchar(6)
);
-----------------------------------------------------------------------------------------------------------------------------------------------
3.Write a SQL statement to create the structure of a table dup_countries similar to countries.
->CREATE TABLE dup_countries ( 
COUNTRY_ID varchar(2),
COUNTRY_NAME varchar(40),
REGION_ID varchar(6)
);
-----------------------------------------------------------------------------------------------------------------------------------
4.Write a SQL statement to create a duplicate copy of countries table including structure and data by name dup_countries.
->CREATE TABLE IF NOT EXISTS dup_countries ( 
COUNTRY_ID varchar(2),
COUNTRY_NAME varchar(40),
REGION_ID varchar(6)
)
-------------------------------------------------------------------------------------------------------------------------------------
5. Write a SQL statement to create a table countries set a constraint NOT NULL.
->CREATE TABLE IF NOT EXISTS countries ( 
COUNTRY_ID varchar(2) NOT NULL,
COUNTRY_NAME varchar(40) NOT NULL,
REGION_ID decimal(10,0) NOT NULL
);
----------------------------------------------------------------------------------------------------------------------------------------
6. Write a SQL statement to create a table named jobs including columns job_id, job_title, min_salary, max_salary 
and check whether the max_salary amount exceeding the upper limit 25000.
->CREATE TABLE IF NOT EXISTS jobs ( 
JOB_ID varchar(10) NOT NULL , 
JOB_TITLE varchar(35) NOT NULL, 
MIN_SALARY decimal(6,0), 
MAX_SALARY decimal(6,0) 
CHECK(MAX_SALARY<=25000)
);
--------------------------------------------------------------------------------------------------------------------------------
7. Write a SQL statement to create a table named countries including columns country_id, 
country_name and region_id and make sure that no countries except Italy, India and China will be entered in the table
->CREATE TABLE IF NOT EXISTS countries ( 
COUNTRY_ID varchar(2),
COUNTRY_NAME varchar(40)
CHECK(COUNTRY_NAME IN('Italy','India','China')) ,
REGION_ID decimal(10,0)
);
----------------------------------------------------------------------------------------------------------------------------------
8.Write a SQL statement to create a table named job_histry including columns employee_id, start_date, end_date, job_id and department_id 
and make sure that the value against column end_date will be entered at the time of insertion to the format like '--/--/----'.
->CREATE TABLE IF NOT EXISTS job_history ( 
EMPLOYEE_ID decimal(6,0) NOT NULL, 
START_DATE date NOT NULL, 
END_DATE date NOT NULL
CHECK (END_DATE LIKE '--/--/----'), 
JOB_ID varchar(10) NOT NULL, 
DEPARTMENT_ID decimal(4,0) NOT NULL 
);
---------------------------------------------------------------------------------------------------------------------------------------
9.Write a SQL statement to create a table named countries including columns country_id,country_name and region_id 
and make sure that no duplicate data against column country_id will be allowed at the time of insertion.
->CREATE TABLE IF NOT EXISTS countries ( 
COUNTRY_ID varchar(2) NOT NULL,
COUNTRY_NAME varchar(40) NOT NULL,
REGION_ID decimal(10,0) NOT NULL,
UNIQUE(COUNTRY_ID)
);
--------------------------------------------------------------------------------------------------------------------------------------------
10.Write a SQL statement to create a table named jobs including columns job_id, job_title, min_salary and max_salary, and make sure that, 
the default value for job_title is blank and min_salary is 8000 and max_salary is NULL will be entered automatically at the time of insertion if no value assigned for the specified columns.
->CREATE TABLE IF NOT EXISTS jobs ( 
JOB_ID varchar(10) NOT NULL UNIQUE, 
JOB_TITLE varchar(35) NOT NULL DEFAULT ' ', 
MIN_SALARY decimal(6,0) DEFAULT 8000, 
MAX_SALARY decimal(6,0) DEFAULT NULL
);
-------------------------------------------------------------------------------------------------------------------------------------------------------------
11. Write a SQL statement to create a table named countries including columns country_id, country_name and region_id and
 make sure that the country_id column will be a key field which will not contain any duplicate data at the time of insertion.
->CREATE TABLE IF NOT EXISTS countries ( 
COUNTRY_ID varchar(2) NOT NULL UNIQUE PRIMARY KEY,
COUNTRY_NAME varchar(40) NOT NULL,
REGION_ID decimal(10,0) NOT NULL
);
--------------------------------------------------------------------------------------------------------------------------------------------------
12.Write a SQL statement to create a table countries including columns country_id, country_name and region_id and make sure that the column country_id will be unique and store an auto incremented value.
->CREATE TABLE IF NOT EXISTS countries ( 
COUNTRY_ID integer NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
COUNTRY_NAME varchar(40) NOT NULL,
REGION_ID decimal(10,0) NOT NULL
);
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
13.Write a SQL statement to create a table countries including columns country_id, country_name and region_id and make sure that the combination of columns country_id and region_id will be unique.
->CREATE TABLE IF NOT EXISTS countries (
COUNTRY_ID varchar(2) NOT NULL UNIQUE DEFAULT '',
COUNTRY_NAME varchar(40) DEFAULT NULL,
REGION_ID decimal(10,0) NOT NULL,
PRIMARY KEY (COUNTRY_ID,REGION_ID));
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14.Write a SQL statement to create a table job_history including columns employee_id, start_date, end_date, job_id and department_id and make sure that,
 the employee_id column does not contain any duplicate value at the time of insertion and the foreign key column job_id contain only those values which are exists in the jobs table.
->CREATE TABLE job_history ( 
EMPLOYEE_ID decimal(6,0) NOT NULL PRIMARY KEY, 
START_DATE date NOT NULL, 
END_DATE date NOT NULL, 
JOB_ID varchar(10) NOT NULL, 
DEPARTMENT_ID decimal(4,0) DEFAULT NULL, 
FOREIGN KEY (job_id) REFERENCES jobs(job_id)
)ENGINE=InnoDB;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15.Write a SQL statement to create a table employees including columns employee_id, first_name, last_name, email, phone_number hire_date, job_id, salary, commission, manager_id and department_id
 and make sure that, the employee_id column does not contain any duplicate value at the time of insertion and the foreign key columns combined by department_id and manager_id columns contain only those unique combination values,
 which combinations are exists in the departments table.
->CREATE TABLE IF NOT EXISTS employees ( 
EMPLOYEE_ID decimal(6,0) NOT NULL PRIMARY KEY, 
FIRST_NAME varchar(20) DEFAULT NULL, 
LAST_NAME varchar(25) NOT NULL, 
EMAIL varchar(25) NOT NULL, 
PHONE_NUMBER varchar(20) DEFAULT NULL, 
HIRE_DATE date NOT NULL, 
JOB_ID varchar(10) NOT NULL, 
SALARY decimal(8,2) DEFAULT NULL, 
COMMISSION_PCT decimal(2,2) DEFAULT NULL, 
MANAGER_ID decimal(6,0) DEFAULT NULL, 
DEPARTMENT_ID decimal(4,0) DEFAULT NULL, 
FOREIGN KEY(DEPARTMENT_ID,MANAGER_ID) 
REFERENCES  departments(DEPARTMENT_ID,MANAGER_ID)
)ENGINE=InnoDB;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

